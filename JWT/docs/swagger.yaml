definitions:
  models.Image:
    properties:
      id:
        type: integer
      image:
        type: string
      name:
        type: string
      user_id:
        type: integer
    type: object
  models.LoginData:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      image:
        $ref: '#/definitions/models.Image'
      name:
        type: string
      password:
        type: string
      phone:
        type: string
      refresh_token:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /image/{id}:
    delete:
      description: Delete image for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Delete image
      tags:
      - image
    get:
      description: Get image for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Image'
      summary: Get image
      tags:
      - image
    patch:
      consumes:
      - application/json
      description: Update image for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Image data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Image'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Update image
      tags:
      - image
    post:
      consumes:
      - application/json
      description: Upload image for a user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: Image data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Image'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Upload image
      tags:
      - image
  /login:
    post:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: Login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.LoginData'
      produces:
      - application/json
      responses:
        "200":
          description: token and refresh token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update user with specific id
      tags:
      - user
  /register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Register user
      tags:
      - user
  /token/refresh:
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: Refresh the access token using a valid refresh token
      parameters:
      - description: Refresh Token
        in: formData
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: access_token
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Refresh token
      tags:
      - token
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
      summary: Delete user with specific id
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Return a single user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Find user by ID
      tags:
      - user
    patch:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: User updated
          schema:
            additionalProperties: true
            type: object
      summary: Update user with specific id
      tags:
      - user
  /user/email/{email}:
    get:
      consumes:
      - application/json
      description: Get user details by email
      parameters:
      - description: User ID
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
      summary: Get user by email
      tags:
      - users
  /user/email/{email}/password:
    post:
      consumes:
      - application/json
      description: Update user password by email
      parameters:
      - description: User Email
        in: path
        name: email
        required: true
        type: string
      - description: New Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: Password updated successfully
          schema:
            type: string
      summary: Update user password by email
      tags:
      - users
  /users:
    get:
      description: Retrieves a list of user accounts
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
      summary: List user accounts
      tags:
      - users
swagger: "2.0"
