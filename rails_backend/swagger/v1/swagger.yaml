openapi: 3.0.0
info:
  title: User Stats API
  version: 1.0.3
  description: API til at håndtere brugere, brugers statistikker, beatboxere og kampe, herunder oprettelse, opdatering, visning og sletning.

tags:
  - name: User
    description: API til at håndtere brugere  
  - name: User Stat
    description: API til at håndtere brugers statistikker
  - name: Beatboxer
    description: API til at håndtere beatboxere
  - name: Match
    description: API til at håndtere kampe

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


security:
  - BearerAuth: []

paths:
  /user:
    get:
      tags:
        - User
      summary: Hent alle brugere
      operationId: getUsers
      security:
        - BearerAuth: []
      responses:
        '200':
          description: En liste over brugere
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

    post:
      tags:
        - User
      summary: Opret en ny bruger
      operationId: createUser
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '201':
          description: Bruger oprettet succesfuldt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '422':
          description: Ugyldige data indsendt

  /user/{id}:
    get:
      tags:
        - User
      summary: Hent en specifik bruger
      operationId: getUserById
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Bruger fundet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Bruger ikke fundet

    put:
      tags:
        - User
      summary: Opdater en bruger
      operationId: updateUser
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Bruger opdateret succesfuldt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Bruger ikke fundet
        '422':
          description: Ugyldige data indsendt

    delete:
      tags:
        - User
      summary: Slet en bruger
      operationId: deleteUser
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Bruger slettet succesfuldt
        '404':
          description: Bruger ikke fundet

  /user_stat:
    get:
      tags:
        - User Stat
      summary: Hent alle brugerstatistikker
      operationId: getUserStats
      security:
        - BearerAuth: []
      responses:
        '200':
          description: En liste over brugerstatistikker
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserStat'

    post:
      tags:
        - User Stat
      summary: Opret en ny brugerstatistik
      operationId: createUserStat
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserStatInput'
      responses:
        '201':
          description: Statistik oprettet succesfuldt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStat'
        '422':
          description: Ugyldige data indsendt

  /user_stat/{id}:
    get:
      tags:
        - User Stat
      summary: Hent en specifik brugerstatistik
      operationId: getUserStatById
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Statistik fundet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStat'
        '404':
          description: Statistik ikke fundet

    put:
      tags:
        - User Stat
      summary: Opdater en brugerstatistik
      operationId: updateUserStat
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserStatInput'
      responses:
        '200':
          description: Statistik opdateret succesfuldt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserStat'
        '404':
          description: Statistik ikke fundet
        '422':
          description: Ugyldige data indsendt

    delete:
      tags:
        - User Stat
      summary: Slet en brugerstatistik
      operationId: deleteUserStat
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Statistik slettet succesfuldt
        '404':
          description: Statistik ikke fundet

  /beat_boxer:
    get:
      tags:
        - Beatboxer
      summary: Hent liste over alle beatboxere
      operationId: getBeatBoxers
      security:
        - BearerAuth: []
      responses:
        '200':
          description: En liste over beatboxere
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BeatBoxer'

    post:
      tags:
        - Beatboxer
      summary: Opret beatboxere i databasen
      operationId: createBeatBoxers
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Beatboxere oprettet succesfuldt
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /match:
    get:
      tags:
        - Match
      summary: Hent alle kampe
      operationId: getMatches
      security:
        - BearerAuth: []
      responses:
        '200':
          description: En liste over kampe
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Match'

    post:
      tags:
        - Match
      summary: Opret en ny kamp
      operationId: createMatch
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchInput'
      responses:
        '201':
          description: Kamp oprettet succesfuldt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'

  /match/{id}:
    get:
      tags:
        - Match
      summary: Hent en specifik kamp baseret på ID
      operationId: getMatchById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
          description: Unikt ID for kampen
      responses:
        '200':
          description: En specifik kamp
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'
        '404':
          description: Kamp ikke fundet

    put:
      tags:
        - Match
      summary: Opdater en specifik kamp baseret på ID
      operationId: updateMatch
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchInput'
      responses:
        '200':
          description: Kamp opdateret succesfuldt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Match'

    delete:
      tags:
        - Match
      summary: Slet en kamp baseret på ID
      operationId: deleteMatch
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Kamp slettet succesfuldt
        '404':
          description: Kamp ikke fundet

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string

    UserInput:
      type: object
      properties:
        name:
          type: string
        username:
          type: string
        email:
          type: string
        password:
          type: string
        phone:
          type: string

    UserStat:
      type: object
      properties:
        id:
          type: integer
        wins:
          type: integer
        lost:
          type: integer
        games_played:
          type: integer
        right_guesses:
          type: integer
        skips:
          type: integer

    UserStatInput:
      type: object
      properties:
        wins:
          type: integer
        lost:
          type: integer
        games_played:
          type: integer
        right_guesses:
          type: integer
        skips:
          type: integer

    BeatBoxer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string

    Match:
      type: object
      properties:
        id:
          type: integer
        winner:
          type: string
        loser:
          type: string
        player_1_points:
          type: integer
        player_2_points:
          type: integer
        draw:
          type: boolean
        player_1_comment:
          type: string
        player_2_comment:
          type: string

    MatchInput:
      type: object
      properties:
        winner:
          type: string
        loser:
          type: string
        player_1_points:
          type: integer
        player_2_points:
          type: integer
        draw:
          type: boolean
        player_1_comment:
          type: string
        player_2_comment:
          type: string
